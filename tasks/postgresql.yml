---
# task file for postgresql

- name: "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)"
  set_fact:
    delegated_dbhost: "{{ server_dbhost if (server_dbhost != 'localhost') else inventory_hostname }}"

- name: "PostgreSQL | Create database"
  postgresql_db: name={{ server_dbname }}
                 port={{ server_dbport }}
                 state=present
  become: yes
#  become_user: postgres
  delegate_to: "{{ delegated_dbhost }}"
  when: zabbix_database_creation
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Create database user"
  postgresql_user: db={{ server_dbname }}
                   name={{ server_dbuser }}
                   password={{ server_dbpassword }}
                   port={{ server_dbport }}
                   priv=ALL
                   state=present
  become: yes
#  become_user: postgres
  delegate_to: "{{ delegated_dbhost }}"
  when: zabbix_database_creation
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Create database partitioning schema"
  postgresql_schema: name={{ pgsql_partitioning_schema }}
                     database={{ server_dbname }}
                     owner={{ server_dbuser }}
                     port={{ server_dbport }}
                     state=present
  become: yes
#  become_user: postgres
  delegate_to: "{{ delegated_dbhost }}"
  when: zabbix_database_creation and zabbix_database_partitioning
  tags:
    - zabbix-server
    - database


- name: "PostgreSQL | Create schema"
  shell: "cd {{ datafiles_path }} && if [ -f create.sql.gz ]; then gunzip create.sql.gz ; fi && psql -h '{{ server_dbhost }}' -U '{{ server_dbuser }}' -d '{{ server_dbname }}' -p '{{ server_dbport }}' -f create.sql && touch /etc/zabbix/schema.done"
  args:
    creates: /etc/zabbix/schema.done
  environment:
    PGPASSWORD: '{{ server_dbpassword }}'
  when: zabbix_short_version >= 30 and zabbix_database_sqlload
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Importing schema file"
  shell: "cd {{ datafiles_path }} && if [ -f schema.sql.gz ]; then gunzip schema.sql.gz ; fi && psql -h '{{ server_dbhost }}' -U '{{ server_dbuser }}' -d '{{ server_dbname }}' -p '{{ server_dbport }}' -f schema.sql && touch /etc/zabbix/schema.done"
  args:
    creates: /etc/zabbix/schema.done
  environment:
    PGPASSWORD: '{{ server_dbpassword }}'
  when: (zabbix_short_version < 30 and zabbix_database_sqlload) or (zabbix_repo == "epel" and zabbix_database_sqlload)
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Importing images file"
  shell: "cd {{ datafiles_path }} && psql -h '{{ server_dbhost }}' -U '{{ server_dbuser }}' -d '{{ server_dbname }}' -p '{{ server_dbport }}' -f images.sql && touch /etc/zabbix/images.done"
  args:
    creates: /etc/zabbix/images.done
  environment:
    PGPASSWORD: '{{ server_dbpassword }}'
  when: (zabbix_short_version < 30 and zabbix_database_sqlload) or (zabbix_repo == "epel" and zabbix_database_sqlload)
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Importing data file"
  shell: "cd {{ datafiles_path }} && psql -h '{{ server_dbhost }}' -U '{{ server_dbuser }}' -d '{{ server_dbname }}' -p '{{ server_dbport }}' -f data.sql && touch /etc/zabbix/data.done"
  args:
    creates: /etc/zabbix/data.done
  environment:
    PGPASSWORD: '{{ server_dbpassword }}'
  when: (zabbix_database_sqlload and zabbix_short_version < 30) or (zabbix_repo == "epel" and zabbix_database_sqlload)
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Copy partitioning sql"
  copy: src=partitioning.sql
        dest="/tmp/partitioning.sql"
  when: zabbix_short_version >= 30 and zabbix_database_sqlload and zabbix_database_partitioning
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Create schema partitioning"
  shell: "cd /tmp && psql -h '{{ server_dbhost }}' -U '{{ server_dbuser }}' -d '{{ server_dbname }}' -p '{{ server_dbport }}' -f partitioning.sql && touch /etc/zabbix/schema_partitioning.done"
  args:
    creates: /etc/zabbix/schema_partitioning.done
  environment:
    PGPASSWORD: '{{ server_dbpassword }}'
  when: zabbix_short_version >= 30 and zabbix_database_sqlload and zabbix_database_partitioning
  tags:
    - zabbix-server
    - database

- name: "PostgreSQL | Create partitioning config dir"
  file: state=directory dest=/etc/zabbix owner=root group=root mode=0755
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "PostgresSQL | Create partitioning config file"
  template: src=partitioning.j2  dest=/etc/zabbix/partitioning.sql owner=root group=root mode=0644
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "PostgresSQL | Planning partioning"
  cron: name="Zabbix partitioning" minute=1 hour=2 user=postgres job="psql -U {{ server_dbuser }} -f /etc/zabbix/partitioning.sql"
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "PostgresSQL | Executing partioning"
  shell: psql -U "{{ server_dbuser }}" -f /etc/zabbix/partitioning.sql
  become: postgres
  delegate_to: "{{ delegated_dbhost }}"
  changed_when: false
  tags:
    - zabbix-server
    - database

